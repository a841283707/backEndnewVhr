<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.javaboy.vhr.mapper.PositionMapper" >
  <resultMap id="BaseResultMap" type="org.javaboy.vhr.bean.Position" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, createDate, enabled
  </sql>







    <!--
    1. 如果传入的是单参数且参数类型是一个List的时候，collection属性值为list
    2. 如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array
    3. 如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可
    以封装成map，实际上如果你在传入参数的时候，在breast里面也是会把它封装成一个Map的，
    map的key就是参数名，所以这个时候collection属性值就是传入的List或array对象在自己封装
    的map里面的key
    -->
  <delete id="deleteAll" >
    delete from position where id in
    <foreach collection="list" open="(" close=")" separator="," index="i" item="position">
      #{position.id}
    </foreach>
  </delete>
  <delete id="deletePosition" parameterType="java.lang.Integer">
      delete from position where id=#{id}
  </delete>
    <!--更新position，注意下面要填写position的属性字段，还要有get方法，因为ibatis
    会默认调用get那个属性字段的方法-->
  <update id="updatePosition" parameterType="org.javaboy.vhr.bean.Position">
      update  position set name= #{name} where id=#{id}
  </update>

  <insert id="addPosition" parameterType="java.lang.String">
      insert into position (name, createDate) values (#{name},CURRENT_DATE )
  </insert>
    <!--得到所有职位-->
  <select id="getAllPosition" resultMap="BaseResultMap">
    select id as id,name as name,createDate as createdate from position
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from position
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from position
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.javaboy.vhr.bean.Position" >
    insert into position (id, name, createDate, 
      enabled)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, 
      #{enabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.javaboy.vhr.bean.Position" >
    insert into position
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.javaboy.vhr.bean.Position" >
    update position
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.javaboy.vhr.bean.Position" >
    update position
    set name = #{name,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>